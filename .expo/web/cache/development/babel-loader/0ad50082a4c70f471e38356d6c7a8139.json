{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hui/Projects/csci426-project/components/AccNoSignScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Google from \"expo-google-app-auth\";\nimport AccsignedScreen from \"./AccSignedScreen\";\n\nfunction LoginPage(props) {\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Sign In With NYIT Credentials\"), React.createElement(Button, {\n    title: \"Sign in\",\n    onPress: function onPress() {\n      return props.signIn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar signInPage = function (_React$Component) {\n  _inherits(signInPage, _React$Component);\n\n  var _super = _createSuper(signInPage);\n\n  function signInPage(props) {\n    var _this;\n\n    _classCallCheck(this, signInPage);\n\n    _this = _super.call(this, props);\n\n    _this.signIn = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                scopes: [\"profile\", \"email\"]\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (result.type === \"success\") {\n                _this.setState({\n                  signedIn: true,\n                  full_name: result.user.name,\n                  last_name: result.user.familyName,\n                  first_name: result.user.givenName,\n                  photoUrl: result.user.photoUrl,\n                  email: result.user.email\n                });\n              } else {\n                console.log(\"\\nLog failed due to: \\n\", result);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"\\nError due to: \\n\", _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.state = {\n      signedIn: false,\n      full_name: \"\",\n      last_name: \"\",\n      first_name: \"\",\n      email: \"\",\n      photoUrl: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(signInPage, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.signedIn) {\n        return React.createElement(AccsignedScreen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }]);\n\n  return signInPage;\n}(React.Component);\n\nexport { signInPage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  header: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/home/hui/Projects/csci426-project/components/AccNoSignScreen.js"],"names":["React","Google","AccsignedScreen","LoginPage","props","styles","header","signIn","signInPage","logInAsync","scopes","result","type","setState","signedIn","full_name","user","name","last_name","familyName","first_name","givenName","photoUrl","email","console","log","state","Component","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontSize"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAMF,KAAK,CAACG,MAAN,EAAN;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;IAEoBC,U;;;;;AAEnB,sBAAYJ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAYnBG,MAZmB,GAYV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEgBN,MAAM,CAACQ,UAAP,CAAkB;AAGrCC,gBAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAH6B,eAAlB,CAFhB;;AAAA;AAECC,cAAAA,MAFD;;AAQL,kBAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,QAAQ,EAAE,IADE;AAEZC,kBAAAA,SAAS,EAAEJ,MAAM,CAACK,IAAP,CAAYC,IAFX;AAGZC,kBAAAA,SAAS,EAAEP,MAAM,CAACK,IAAP,CAAYG,UAHX;AAIZC,kBAAAA,UAAU,EAAET,MAAM,CAACK,IAAP,CAAYK,SAJZ;AAKZC,kBAAAA,QAAQ,EAAEX,MAAM,CAACK,IAAP,CAAYM,QALV;AAMZC,kBAAAA,KAAK,EAAEZ,MAAM,CAACK,IAAP,CAAYO;AANP,iBAAd;AAQD,eATD,MASO;AACLC,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCd,MAAvC;AACD;;AAnBI;AAAA;;AAAA;AAAA;AAAA;AAqBLa,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AArBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZU;;AAEjB,UAAKC,KAAL,GAAa;AACXZ,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXG,MAAAA,SAAS,EAAE,EAHA;AAIXE,MAAAA,UAAU,EAAE,EAJD;AAKXG,MAAAA,KAAK,EAAE,EALI;AAMXD,MAAAA,QAAQ,EAAE;AANC,KAAb;AAFiB;AAUlB;;;;6BA4BO;AACN,UAAI,KAAKI,KAAL,CAAWZ,QAAf,EAAwB;AAEtB,eACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OALD,MAKO;AAEL,eACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;;EApDqCd,KAAK,CAAC2B,S;;SAAzBnB,U;AAwDrB,IAAMH,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/B5B,EAAAA,MAAM,EAAE;AACN6B,IAAAA,QAAQ,EAAE;AADJ;AAPuB,CAAlB,CAAf","sourcesContent":["// user did not sign in yet\n\nimport * as React from \"react\";\nimport { Button, View, Text, StyleSheet } from \"react-native\";\nimport * as Google from \"expo-google-app-auth\";\nimport AccsignedScreen from \"./AccSignedScreen\";\n\nfunction LoginPage(props) {\n  // init landing page for the Google Signin\n  return (\n    <View>\n      <Text style={styles.header}>Sign In With NYIT Credentials</Text>\n      <Button title=\"Sign in\" onPress={() => props.signIn()} />\n    </View>\n  );\n}\n\nexport default class signInPage extends React.Component {\n  // init things for the log in\n  constructor(props) {\n    super(props);\n    this.state = {\n      signedIn: false,\n      full_name: \"\",\n      last_name: \"\",\n      first_name: \"\",\n      email: \"\",\n      photoUrl: \"\",\n    };\n  }\n\n  signIn = async () => {\n    try {\n      const result = await Google.logInAsync({\n        // androidClientId: \"<YOUR_CLIENT_ID_HERE>\",\n        // iosClientId: \"<YOUR_CLIENT_ID_HERE>\",\n        scopes: [\"profile\", \"email\"],\n      });\n\n      if (result.type === \"success\") {\n        this.setState({\n          signedIn: true,\n          full_name: result.user.name,\n          last_name: result.user.familyName,\n          first_name: result.user.givenName,\n          photoUrl: result.user.photoUrl,\n          email: result.user.email,\n        });\n      } else {\n        console.log(\"\\nLog failed due to: \\n\", result);\n      }\n    } catch (e) {\n      console.log(\"\\nError due to: \\n\", e);\n      // console.log(type(value));\n    }\n  };\n\n  render(){\n    if (this.state.signedIn){\n      // return signed in acc screen\n      return(\n        <AccsignedScreen/>\n      );\n    } else {\n      // return default acc screen\n      return(\n        <View></View>\n      );\n    }\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}